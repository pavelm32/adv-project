/*module.exports.blog = function (req, res) {
    const sendObj = {
        title: 'My Blog',
    };
    const items = [
        {
            'title': 'Первая',
            'date': '2017-07-12',
            'body': 'Каждый веб-разработчик знает, что такое текст-«рыба». Текст этот, несмотря на название, не имеет никакого отношения к обитателям водоемов. Используется он веб-дизайнерами для вставки на интернет-страницы и демонстрации внешнего вида контента, просмотра шрифтов, абзацев, отступов и т.д. Так как цель применения такого текста исключительно демонстрационная, то и смысловую нагрузку ему нести совсем необязательно. Более того, нечитабельность текста сыграет на руку при оценке качества восприятия макета. Самым известным «рыбным» текстом является знаменитый Lorem ipsum. Считается, что впервые его применили в книгопечатании еще в XVI веке. Своим появлением Lorem ipsum обязан древнеримскому философу Цицерону, ведь именно из его трактата «О пределах добра и зла» средневековый книгопечатник вырвал отдельные фразы и слова, получив текст-«рыбу», широко используемый и по сей день. Конечно, возникают некоторые вопросы, связанные с использованием Lorem ipsum на сайтах и проектах, ориентированных на кириллический контент – написание символов на латыни и на кириллице значительно различается. И даже с языками, использующими латинский алфавит, могут возникнуть небольшие проблемы: в различных языках те или иные буквы встречаются с разной частотой, имеется разница в длине наиболее распространенных слов. Отсюда напрашивается вывод, что все же лучше использовать в качестве «рыбы» текст на том языке, который планируется использовать при запуске проекта. Сегодня существует несколько вариантов Lorem ipsum, кроме того, есть специальные генераторы, создающие собственные варианты текста на основе оригинального трактата, благодаря чему появляется возможность получить более длинный неповторяющийся набор слов.',
        },
        {
            'title': 'Second',
            'date': '12-09-2016',
            'body': 'Буквы встречаются с использованием lorem. Широко используемый и смысловую нагрузку ему нести. Планируется использовать при оценке качества восприятия макета добра. Считается, что все же лучше. Языками, использующими латинский алфавит, могут возникнуть. Все же лучше использовать при запуске. Пределах добра и на латыни и смысловую нагрузку. Существует несколько вариантов lorem. Lorem ipsum на руку при оценке качества восприятия макета lorem. Связанные с использованием lorem который планируется использовать. Иные буквы встречаются с использованием lorem ipsum на руку при оценке. Кириллический контент – написание символов на название, не имеет никакого отношения. Название, не имеет никакого отношения. Благодаря чему появляется возможность получить более того, есть специальные генераторы, создающие собственные. Планируется использовать при запуске проекта. Некоторые вопросы, связанные с разной частотой. Иные буквы встречаются с разной частотой, имеется разница. Отсюда напрашивается вывод, что все же лучше использовать. Исключительно демонстрационная, то и демонстрации внешнего. Лучше использовать при запуске проекта все. Использовать при оценке качества восприятия макета. Распространенных слов языках те или иные буквы встречаются. Появляется возможность получить более длинный неповторяющийся набор слов.. Существует несколько вариантов lorem ipsum на кириллице. Длине наиболее распространенных слов зла средневековый книгопечатник. О пределах добра и проектах ориентированных.',
        },
        {
            'title': 'Third',
            'date': '11-01-2017',
            'body': 'Буквы встречаются с использованием lorem. Широко используемый и смысловую нагрузку ему нести. Планируется использовать при оценке качества восприятия макета добра. Считается, что все же лучше. Языками, использующими латинский алфавит, могут возникнуть. Все же лучше использовать при запуске. Пределах добра и на латыни и смысловую нагрузку. Существует несколько вариантов lorem. Lorem ipsum на руку при оценке качества восприятия макета lorem. Связанные с использованием lorem который планируется использовать. Иные буквы встречаются с использованием lorem ipsum на руку при оценке. Кириллический контент – написание символов на название, не имеет никакого отношения. Название, не имеет никакого отношения. Благодаря чему появляется возможность получить более того, есть специальные генераторы, создающие собственные. Планируется использовать при запуске проекта. Некоторые вопросы, связанные с разной частотой. Иные буквы встречаются с разной частотой, имеется разница. Отсюда напрашивается вывод, что все же лучше использовать. Исключительно демонстрационная, то и демонстрации внешнего. Лучше использовать при запуске проекта все. Использовать при оценке качества восприятия макета. Распространенных слов языках те или иные буквы встречаются. Появляется возможность получить более длинный неповторяющийся набор слов.. Существует несколько вариантов lorem ipsum на кириллице. Длине наиболее распространенных слов зла средневековый книгопечатник. О пределах добра и проектах ориентированных.',
        },
    ];
    res.render('pages/blog', Object.assign({}, sendObj, {items}));
};*/

const config = require('../config');
const http = require('axios');

module.exports.blog = function (req, res) {
    const pathAPI = '/api/blog';
    const requestOptions = {
        url: `http://${config.server.host}:${config.server.port}${pathAPI}`,
        method: 'GET',
        responseType: 'json',
    };
    const sendObj = {
        title: 'My Blog',
    };

    http(requestOptions)
        .then(function(response) {
            console.log(response.data);
            res.render('pages/blog', Object.assign({}, sendObj, response.data));
        },function (error) {
            if (error.response) {
                // The request was made and the server responded with a status code
                // that falls out of the range of 2xx
                console.log(error.response.data);
                console.log(error.response.status);
            } else if (error.request) {
                // The request was made but no response was received
                // `error.request` is an instance of XMLHttpRequest in the browser and an instance of
                // http.ClientRequest in node.js
                console.log(error.request);
            } else {
                // Something happened in setting up the request that triggered an Error
                console.log('Error', error.message);
            }
        });
};